Banco de Dados Atualizado
CREATE DATABASE ResolveAi;
drop database ResolveAi;

USE ResolveAi;

-- 1 Tabela Clientes

CREATE TABLE Clientes (
    idCliente INT AUTO_INCREMENT PRIMARY KEY,
	nomeSobrenome VARCHAR(200) NOT NULL,
    Telefone VARCHAR(15) NOT NULL,
    Senha VARCHAR(10) NOT NULL,
    Status bool,
    email varchar (80) not null,
    datacadastro TIMESTAMP,
    dataAlteracao TIMESTAMP,
	CPF_CNPJ VARCHAR(18) NOT NULL,
    dataNascimento DATE NOT NULL,
	logradouro VARCHAR(255) NOT NULL,
    numero VARCHAR(10) NOT NULL,
    complemento VARCHAR(255),
    bairro VARCHAR(100) NOT NULL,
    cidade VARCHAR(100) NOT NULL,
    estado VARCHAR(2) NOT NULL,
    cep VARCHAR(10) NOT NULL
    );
    
    -- 2 Tabela Prestadores
CREATE TABLE Prestador (
    idPrestador INT AUTO_INCREMENT PRIMARY KEY,
    nomeSobrenome VARCHAR(200) NOT NULL,
    Telefone VARCHAR(15) NOT NULL,
    Senha VARCHAR(10) NOT NULL,
    Status bool,
    email varchar (80) not null,
    datacadastro TIMESTAMP,
    dataAlteracao TIMESTAMP,
	CPF_CNPJ VARCHAR(18) NOT NULL,
    dataNascimento DATE NOT NULL,
	logradouro VARCHAR(255) NOT NULL,
    numero VARCHAR(10) NOT NULL,
    complemento VARCHAR(255),
    bairro VARCHAR(100) NOT NULL,
    cidade VARCHAR(100) NOT NULL,
    estado VARCHAR(2) NOT NULL,
    cep VARCHAR(10) NOT NULL,
    percentualCobrado DECIMAL(5, 2) NOT NULL,
	idTiposServico INT,
	constraint fk_TiposServico
    FOREIGN KEY (idTiposServico) 
    REFERENCES TiposServico(idTiposServico)
);
       
       -- 3 Tabela Usuário
CREATE TABLE Usuarios (
    idUsuario INT AUTO_INCREMENT PRIMARY KEY,
    idCliente INT ,
    idPrestador INT,
    login VARCHAR(150) NOT NULL,
    senha VARCHAR(30) NOT NULL,
    status bool
);

-- 4 Tabela Ordem de serviço 
CREATE TABLE OrdemServico (
    idOrdemServico INT AUTO_INCREMENT PRIMARY KEY,
    dataAtendimento DATE NOT NULL,
    horarioAtendimento TIME NOT NULL,
    status bool, -- executado ou não
	idPrestador INT not null,
	idCliente INT not null,
    Constraint fk_idPrestador
    FOREIGN KEY (idPrestador)
    REFERENCES Prestador(idPrestador),
	Constraint fk_idCliente
    FOREIGN KEY (idCliente)
    REFERENCES Clientes(idCliente)

);
-- 5 Tabela Ordem  itens de Serviço
    Create table OrdemItensServico (
    idOrdemItensServico int auto_increment primary key,
    idServico int not null,
    idTiposServico int not null,
    Constraint fk_idServico
    FOREIGN KEY (idServico)
    REFERENCES Servicos(idServico),
	Constraint fk_idTiposServico
    FOREIGN KEY (idTiposServico)
    REFERENCES TiposServico(idTiposServico)
    );

-- 6 Tabela Tipos de Serviço
CREATE TABLE TiposServico (
    idtiposServico INT AUTO_INCREMENT PRIMARY KEY,
    descricao VARCHAR(50) NOT NULL
);

-- 7 Tabela Serviço
CREATE TABLE Servicos (
    idServico INT AUTO_INCREMENT PRIMARY KEY,
    descricao VARCHAR(1000) NOT NULL,
	idOrdemItensServico int Not Null
);

-- 8 Tabela Pagamentos
CREATE TABLE Pagamentos (
    idPagamentos INT AUTO_INCREMENT PRIMARY KEY,
    idCliente INT not null,
    idPrestador INT not null,
    idServico INT not null,
    metodoPagamento int  NOT NULL,
    ValorPago DECIMAL(10, 2) NOT NULL,
    dataPagamento TIMESTAMP,
    valorRepasse decimal (10,2) not null, -- prestador valor pago - percentual 
    dataRepasse timestamp, -- prestador 
    status int not null,
    constraint fk_ClientePagamento
    FOREIGN KEY (idCliente) 
    REFERENCES Clientes(idCliente),
	constraint fk_PrestadorPagamento
    FOREIGN KEY (idPrestador) 
    REFERENCES Prestador(idPrestador),
    constraint fk_idServicos
    FOREIGN KEY (idServico) 
    REFERENCES Servicos(idServico)
);


 
